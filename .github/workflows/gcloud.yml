name: Deploy to Google Cloud Run
on:
  push:
    branches:
      - main
    paths:
      - 'server/**'

jobs:
  deploy:
    name: Deploy to GCP Cloud Run
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCLOUD_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCLOUD_PROJECT_ID }}
          install_components: 'beta'

      - name: Authenticate Docker to GCP
        run: |
          gcloud auth configure-docker gcr.io

      - name: Build Docker image
        run: |
          docker build -t eu.gcr.io/${{ secrets.GCLOUD_PROJECT_ID }}/${{ secrets.GCLOUD_SERVICE_NAME }} -f server/api/Dockerfile .

      - name: Push Docker image to Google Container Registry
        run: |
          docker push eu.gcr.io/${{ secrets.GCLOUD_PROJECT_ID }}/${{ secrets.GCLOUD_SERVICE_NAME }}

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ secrets.GCLOUD_SERVICE_NAME }} \
          --image eu.gcr.io/${{ secrets.GCLOUD_PROJECT_ID }}/${{ secrets.GCLOUD_SERVICE_NAME }} \
          --platform managed \
          --region europe-west1 \
          --allow-unauthenticated \
          --set-env-vars CLOUD_SQL_CONNECTION_NAME=${{ secrets.GCLOUD_SQL_CONNECTION_NAME }} \
          --set-env-vars DB_USER=${{ secrets.GCLOUD_DB_USER }} \
          --set-env-vars DB_PASSWORD=${{ secrets.GCLOUD_DB_PASSWORD }} \
          --set-env-vars DB_NAME=${{ secrets.GCLOUD_DB_NAME }} \
          --add-cloudsql-instances ${{ secrets.GCLOUD_SQL_CONNECTION_NAME }}